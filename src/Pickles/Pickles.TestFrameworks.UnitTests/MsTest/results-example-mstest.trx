<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="8b057389-ab82-44cd-869d-cd4fea1405c3" name="ocsur@DESKTOP-AIFNJPI 2016-02-29 13:31:17" runUser="DESKTOP-AIFNJPI\ocsur" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="TestSettings" id="3d90c4f8-ccdc-4663-bad3-9f4c55f42318">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment userDeploymentRoot="C:\src\pickles-testresults" useDefaultDeploymentRoot="false" enabled="false" runDeploymentRoot="ocsur_DESKTOP-AIFNJPI 2016-02-29 13_31_17" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Properties />
  </TestSettings>
  <Times creation="2016-02-29T13:31:17.8508854-05:00" queuing="2016-02-29T13:31:18.1769705-05:00" start="2016-02-29T13:31:18.2649927-05:00" finish="2016-02-29T13:31:18.8281545-05:00" />
  <ResultSummary outcome="Failed">
    <Counters total="35" executed="35" passed="18" error="0" failed="8" timeout="0" aborted="0" inconclusive="9" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="NotAutomatedScenario1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="0e090158-43a1-1be8-47c2-13e1b2c9f8c7">
      <Description>Not automated scenario 1</Description>
      <Execution id="84b87db1-b1a6-4bd5-8628-48cdde807b27" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Not Automated At All</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="NotAutomatedScenario1" />
    </UnitTest>
    <UnitTest name="AddingSeveralNumbers_40" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="4d0f7327-ed22-9a43-969a-ac2ea8102d66">
      <Description>Adding several numbers</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="tag2" />
      </TestCategory>
      <Execution id="827b4f24-27de-43dd-9afa-a2659ded2a1c" />
      <Properties>
        <Property>
          <Key>Parameter:first number</Key>
          <Value>40</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>40</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>180</Value>
        </Property>
        <Property>
          <Key>Parameter:third number</Key>
          <Value>90</Value>
        </Property>
        <Property>
          <Key>Parameter:second number</Key>
          <Value>50</Value>
        </Property>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddingSeveralNumbers_40" />
    </UnitTest>
    <UnitTest name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_2" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="40304968-0dee-8e41-4f42-20809899a9d0">
      <Description>And we can go totally bonkers with multiple example sections.</Description>
      <Execution id="3d59785c-3405-4625-9544-f7ba5f664fe1" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>fail_2</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>fail_2</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_2" />
    </UnitTest>
    <UnitTest name="NotAutomatedScenario3" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="64813bea-d79b-d74b-adb5-1302eaf5641f">
      <Description>Not automated scenario 3</Description>
      <Execution id="570e9634-242d-41bf-88bf-ea10800527e1" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Not Automated At All</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="NotAutomatedScenario3" />
    </UnitTest>
    <UnitTest name="AddTwoNumbers" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="ca63316a-39e5-9545-3bca-f1839c7b4664">
      <Description>Add two numbers</Description>
      <Execution id="41b67f13-9fce-438b-a8dc-dbd6388e8934" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Failing Background</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.FailingBackgroundFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddTwoNumbers" />
    </UnitTest>
    <UnitTest name="FailingFeatureInconclusiveScenario" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="7e6c75c9-5365-7582-f701-20d37d3ff511">
      <Description>Failing Feature Inconclusive Scenario</Description>
      <Execution id="0a75715a-b55a-472c-9ab4-719e75bfc680" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Failing</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="FailingFeatureInconclusiveScenario" />
    </UnitTest>
    <UnitTest name="InconclusiveFeatureInconclusiveScenario" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="add44896-9236-510f-750d-eb49b89a7a65">
      <Description>Inconclusive Feature Inconclusive Scenario</Description>
      <Execution id="c14a24e4-f357-4e54-bff6-72b4c302dc21" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Inconclusive</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.MinimalFeatures.InconclusiveFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="InconclusiveFeatureInconclusiveScenario" />
    </UnitTest>
    <UnitTest name="FailingFeaturePassingScenario" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="fa1e54c9-cdb0-8bb1-6764-9179c3b61825">
      <Description>Failing Feature Passing Scenario</Description>
      <Execution id="639cb5c4-04f2-44f2-9c1d-c04cbef0cad8" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Failing</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="FailingFeaturePassingScenario" />
    </UnitTest>
    <UnitTest name="DealCorrectlyWithBackslashesInTheExamples_CTemp" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="72d470fa-c19a-1302-1fcf-eb104ea36048">
      <Description>Deal correctly with backslashes in the examples</Description>
      <Execution id="2f709cc6-9269-4107-934f-343e4a914966" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>c:\Temp\</Value>
        </Property>
        <Property>
          <Key>Parameter:file path</Key>
          <Value>c:\Temp\</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="DealCorrectlyWithBackslashesInTheExamples_CTemp" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereOneScenarioFails_Pass_2" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="b04f3200-80ca-d47f-0c01-8a37e5c952e6">
      <Description>This is a scenario outline where one scenario fails</Description>
      <Execution id="3727f45e-675e-4c11-93b8-17c0d3a607d8" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_2</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_2</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereOneScenarioFails_Pass_2" />
    </UnitTest>
    <UnitTest name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="78a6b3a3-679e-ee71-7ff5-c9338e3be6c2">
      <Description>And we can go totally bonkers with multiple example sections.</Description>
      <Execution id="027e534e-d111-4fb7-88d5-2fa8e793fe3d" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>fail_1</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>fail_1</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_1" />
    </UnitTest>
    <UnitTest name="AddingSeveralNumbers_60" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="f4b45c2f-fc98-d23c-6179-62d5b5a59825">
      <Description>Adding several numbers</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="tag2" />
      </TestCategory>
      <Execution id="d933299c-beea-4829-a906-a6de2623b895" />
      <Properties>
        <Property>
          <Key>Parameter:first number</Key>
          <Value>60</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>60</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>260</Value>
        </Property>
        <Property>
          <Key>Parameter:third number</Key>
          <Value>130</Value>
        </Property>
        <Property>
          <Key>Parameter:second number</Key>
          <Value>70</Value>
        </Property>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddingSeveralNumbers_60" />
    </UnitTest>
    <UnitTest name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet0_Pass_2" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="ee74d71f-f824-19d9-866e-a408a95ffa99">
      <Description>And we can go totally bonkers with multiple example sections.</Description>
      <Execution id="d138cd0f-06d4-4e6c-8c27-cf675ae7fd8a" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_2</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_2</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet0_Pass_2" />
    </UnitTest>
    <UnitTest name="FailingFeatureFailingScenario" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="18582dd5-09c7-ce67-9cb7-8e15a9cdffd0">
      <Description>Failing Feature Failing Scenario</Description>
      <Execution id="3a186856-41de-4034-b4a8-feade31a112f" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Failing</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="FailingFeatureFailingScenario" />
    </UnitTest>
    <UnitTest name="DealCorrectlyWithParenthesisInTheExamples_ThisIsADescriptionAndMore" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="d09c033d-0065-cbeb-bd7c-ee8b6460688f">
      <Description>Deal correctly with parenthesis in the examples</Description>
      <Execution id="0cdaf90e-7083-4a5c-b98e-f68272057f57" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>This is a description (and more)</Value>
        </Property>
        <Property>
          <Key>Parameter:overly descriptive field</Key>
          <Value>This is a description (and more)</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="DealCorrectlyWithParenthesisInTheExamples_ThisIsADescriptionAndMore" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Pass_1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="6e54c207-a3b1-f181-06be-066795ac26e1">
      <Description>This is a scenario outline where one scenario is inconclusive</Description>
      <Execution id="1d5f63e8-3036-4422-92d6-d60ba1ae151b" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_1</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_1</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Pass_1" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_2" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="9efc5df4-5f77-a670-8622-976418721b8f">
      <Description>This is a scenario outline where all scenarios pass</Description>
      <Execution id="17553853-0683-4145-9d61-74031017021a" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_2</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_2</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_2" />
    </UnitTest>
    <UnitTest name="InconclusiveFeaturePassingScenario" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="41cb0c4f-1c07-4937-29e8-dcc987caf94e">
      <Description>Inconclusive Feature Passing Scenario</Description>
      <Execution id="beda5beb-f73a-4471-94ee-56da009212bb" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Inconclusive</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.MinimalFeatures.InconclusiveFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="InconclusiveFeaturePassingScenario" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Inconclusive_1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="8c97c958-0c5d-1594-2cc5-02c96df8fc9b">
      <Description>This is a scenario outline where one scenario is inconclusive</Description>
      <Execution id="05f537a2-462a-4a54-8a89-c50ee92ee819" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>inconclusive_1</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>inconclusive_1</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Inconclusive_1" />
    </UnitTest>
    <UnitTest name="TestMethod" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="aa71fe8a-e5aa-f23d-c632-cfb3c587ca21">
      <Execution id="6385cf85-f1b1-4e89-b2d7-ed3de7d43023" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.OrdinaryUnitTest, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestMethod" />
    </UnitTest>
    <UnitTest name="AddTwoNumbers" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="6b8581c3-611e-6116-4232-a31382677735">
      <Description>Add two numbers</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="tag1" />
      </TestCategory>
      <Execution id="2c348320-9cb3-4902-a6f0-e8ce76519fa9" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddTwoNumbers" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Pass_2" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="8f2bb160-fa82-a566-570e-51eeb5237e95">
      <Description>This is a scenario outline where one scenario is inconclusive</Description>
      <Execution id="31eb3903-2072-4aa5-beb1-aa68da5cef6c" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_2</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_2</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Pass_2" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereOneScenarioFails_Fail_1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="05c22c90-eaaa-d3c2-bd2d-36c2df85528e">
      <Description>This is a scenario outline where one scenario fails</Description>
      <Execution id="5c0a8fb0-126d-490e-b036-2d0a26f9c66d" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>fail_1</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>fail_1</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereOneScenarioFails_Fail_1" />
    </UnitTest>
    <UnitTest name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_2" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="4d5f7893-139c-db00-8823-de561780758d">
      <Description>And we can go totally bonkers with multiple example sections.</Description>
      <Execution id="e7670bb6-9523-4594-9760-d1d941205633" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>inconclusive_2</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>inconclusive_2</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_2" />
    </UnitTest>
    <UnitTest name="AddingSeveralNumbers_60" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="17bb28b8-a770-72be-af08-5a4b0847e4ea">
      <Description>Adding several numbers</Description>
      <Execution id="65cce851-fe31-4e22-b9db-b45daa8902f4" />
      <Properties>
        <Property>
          <Key>Parameter:first number</Key>
          <Value>60</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>60</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>260</Value>
        </Property>
        <Property>
          <Key>Parameter:third number</Key>
          <Value>130</Value>
        </Property>
        <Property>
          <Key>Parameter:second number</Key>
          <Value>70</Value>
        </Property>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Failing Background</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.FailingBackgroundFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddingSeveralNumbers_60" />
    </UnitTest>
    <UnitTest name="NotAutomatedScenario2" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="067e1c92-2860-531b-28dc-c2863e91b7f5">
      <Description>Not automated scenario 2</Description>
      <Execution id="40db28a5-6f62-4207-9029-39db08667250" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Not Automated At All</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="NotAutomatedScenario2" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="2c8f1abb-446c-6683-6327-8ec4ccd46e1a">
      <Description>This is a scenario outline where all scenarios pass</Description>
      <Execution id="5bc6395d-9425-4db6-be59-68cb956cddb3" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_1</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_1</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_1" />
    </UnitTest>
    <UnitTest name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet0_Pass_1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="78aeddd0-4ae5-6103-b7dd-e62b71148721">
      <Description>And we can go totally bonkers with multiple example sections.</Description>
      <Execution id="12b14fd2-ed0a-46c2-a19a-f9a4257d58af" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_1</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_1</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet0_Pass_1" />
    </UnitTest>
    <UnitTest name="PassingFeaturePassingScenario" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="3af599bd-a8de-95a2-1ecc-194c7f8aceeb">
      <Description>Passing Feature Passing Scenario</Description>
      <Execution id="ee52d898-3893-4b11-aca2-690c962c9094" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Passing</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.MinimalFeatures.PassingFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="PassingFeaturePassingScenario" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_3" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="9bb2410c-d8c6-90b8-75cd-5c93dc903745">
      <Description>This is a scenario outline where all scenarios pass</Description>
      <Execution id="ee5409c4-d89a-4640-b17f-b8a1676aae7f" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_3</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_3</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_3" />
    </UnitTest>
    <UnitTest name="ThisIsAScenarioOutlineWhereOneScenarioFails_Pass_1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="e64af447-d4dc-7221-865a-703128db7b90">
      <Description>This is a scenario outline where one scenario fails</Description>
      <Execution id="4b0b1635-cf18-425b-bb46-0b3d893671fa" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>pass_1</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>pass_1</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="ThisIsAScenarioOutlineWhereOneScenarioFails_Pass_1" />
    </UnitTest>
    <UnitTest name="AddingSeveralNumbers_40" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="b4815779-aba4-cf1b-8df3-4a745af70720">
      <Description>Adding several numbers</Description>
      <Execution id="08a864ff-1bab-4fda-b9c3-9442a9c5dbc2" />
      <Properties>
        <Property>
          <Key>Parameter:first number</Key>
          <Value>40</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>40</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>180</Value>
        </Property>
        <Property>
          <Key>Parameter:third number</Key>
          <Value>90</Value>
        </Property>
        <Property>
          <Key>Parameter:second number</Key>
          <Value>50</Value>
        </Property>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Failing Background</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.FailingBackgroundFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddingSeveralNumbers_40" />
    </UnitTest>
    <UnitTest name="FailToAddTwoNumbers" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="b13a186e-33df-348e-f9e2-a18b445d0d6e">
      <Description>Fail to add two numbers</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="tag1" />
      </TestCategory>
      <Execution id="49085209-3670-430a-b4e1-697177b97fae" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="FailToAddTwoNumbers" />
    </UnitTest>
    <UnitTest name="NotAutomatedAddingTwoNumbers" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="2124dd33-7aaa-d4fb-c72f-98ad434251c0">
      <Description>Not automated adding two numbers</Description>
      <Execution id="b4b846b0-aafb-4e0b-b82c-b81e74885ed4" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="NotAutomatedAddingTwoNumbers" />
    </UnitTest>
    <UnitTest name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_1" storage="c:\src\pickles-testresults\\testharness\mstest\bin\debug\mstestharness.dll" id="e30ef794-1ea7-a76a-356b-1668bca94630">
      <Description>And we can go totally bonkers with multiple example sections.</Description>
      <Execution id="478620d9-8754-4ed6-a149-e6a5a812a4b5" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Scenario Outlines</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>inconclusive_1</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>inconclusive_1</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/src/pickles-testresults/TestHarness/mstest/bin/Debug/MsTestHarness.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.ScenarioOutlinesFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_1" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="4d0f7327-ed22-9a43-969a-ac2ea8102d66" executionId="827b4f24-27de-43dd-9afa-a2659ded2a1c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f4b45c2f-fc98-d23c-6179-62d5b5a59825" executionId="d933299c-beea-4829-a906-a6de2623b895" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b8581c3-611e-6116-4232-a31382677735" executionId="2c348320-9cb3-4902-a6f0-e8ce76519fa9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b13a186e-33df-348e-f9e2-a18b445d0d6e" executionId="49085209-3670-430a-b4e1-697177b97fae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2124dd33-7aaa-d4fb-c72f-98ad434251c0" executionId="b4b846b0-aafb-4e0b-b82c-b81e74885ed4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b4815779-aba4-cf1b-8df3-4a745af70720" executionId="08a864ff-1bab-4fda-b9c3-9442a9c5dbc2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="17bb28b8-a770-72be-af08-5a4b0847e4ea" executionId="65cce851-fe31-4e22-b9db-b45daa8902f4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ca63316a-39e5-9545-3bca-f1839c7b4664" executionId="41b67f13-9fce-438b-a8dc-dbd6388e8934" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="18582dd5-09c7-ce67-9cb7-8e15a9cdffd0" executionId="3a186856-41de-4034-b4a8-feade31a112f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="7e6c75c9-5365-7582-f701-20d37d3ff511" executionId="0a75715a-b55a-472c-9ab4-719e75bfc680" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fa1e54c9-cdb0-8bb1-6764-9179c3b61825" executionId="639cb5c4-04f2-44f2-9c1d-c04cbef0cad8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="add44896-9236-510f-750d-eb49b89a7a65" executionId="c14a24e4-f357-4e54-bff6-72b4c302dc21" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="41cb0c4f-1c07-4937-29e8-dcc987caf94e" executionId="beda5beb-f73a-4471-94ee-56da009212bb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3af599bd-a8de-95a2-1ecc-194c7f8aceeb" executionId="ee52d898-3893-4b11-aca2-690c962c9094" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0e090158-43a1-1be8-47c2-13e1b2c9f8c7" executionId="84b87db1-b1a6-4bd5-8628-48cdde807b27" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="067e1c92-2860-531b-28dc-c2863e91b7f5" executionId="40db28a5-6f62-4207-9029-39db08667250" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="64813bea-d79b-d74b-adb5-1302eaf5641f" executionId="570e9634-242d-41bf-88bf-ea10800527e1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa71fe8a-e5aa-f23d-c632-cfb3c587ca21" executionId="6385cf85-f1b1-4e89-b2d7-ed3de7d43023" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="78aeddd0-4ae5-6103-b7dd-e62b71148721" executionId="12b14fd2-ed0a-46c2-a19a-f9a4257d58af" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ee74d71f-f824-19d9-866e-a408a95ffa99" executionId="d138cd0f-06d4-4e6c-8c27-cf675ae7fd8a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e30ef794-1ea7-a76a-356b-1668bca94630" executionId="478620d9-8754-4ed6-a149-e6a5a812a4b5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4d5f7893-139c-db00-8823-de561780758d" executionId="e7670bb6-9523-4594-9760-d1d941205633" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="78a6b3a3-679e-ee71-7ff5-c9338e3be6c2" executionId="027e534e-d111-4fb7-88d5-2fa8e793fe3d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="40304968-0dee-8e41-4f42-20809899a9d0" executionId="3d59785c-3405-4625-9544-f7ba5f664fe1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="72d470fa-c19a-1302-1fcf-eb104ea36048" executionId="2f709cc6-9269-4107-934f-343e4a914966" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d09c033d-0065-cbeb-bd7c-ee8b6460688f" executionId="0cdaf90e-7083-4a5c-b98e-f68272057f57" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2c8f1abb-446c-6683-6327-8ec4ccd46e1a" executionId="5bc6395d-9425-4db6-be59-68cb956cddb3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9efc5df4-5f77-a670-8622-976418721b8f" executionId="17553853-0683-4145-9d61-74031017021a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9bb2410c-d8c6-90b8-75cd-5c93dc903745" executionId="ee5409c4-d89a-4640-b17f-b8a1676aae7f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05c22c90-eaaa-d3c2-bd2d-36c2df85528e" executionId="5c0a8fb0-126d-490e-b036-2d0a26f9c66d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e64af447-d4dc-7221-865a-703128db7b90" executionId="4b0b1635-cf18-425b-bb46-0b3d893671fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b04f3200-80ca-d47f-0c01-8a37e5c952e6" executionId="3727f45e-675e-4c11-93b8-17c0d3a607d8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c97c958-0c5d-1594-2cc5-02c96df8fc9b" executionId="05f537a2-462a-4a54-8a89-c50ee92ee819" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6e54c207-a3b1-f181-06be-066795ac26e1" executionId="1d5f63e8-3036-4422-92d6-d60ba1ae151b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8f2bb160-fa82-a566-570e-51eeb5237e95" executionId="31eb3903-2072-4aa5-beb1-aa68da5cef6c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="827b4f24-27de-43dd-9afa-a2659ded2a1c" testId="4d0f7327-ed22-9a43-969a-ac2ea8102d66" testName="AddingSeveralNumbers_40" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0781946" startTime="2016-02-29T13:31:18.2870112-05:00" endTime="2016-02-29T13:31:18.5750765-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="827b4f24-27de-43dd-9afa-a2659ded2a1c">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0.0s)
Given I have entered 40 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(40) (0.0s)
And I have entered 50 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(50) (0.0s)
And I have entered 90 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(90) (0.0s)
When I press add
-&gt; done: AdditionSteps.WhenIPressAdd() (0.0s)
Then the result should be 180 on the screen
-&gt; done: AdditionSteps.ThenTheResultShouldBeOnTheScreen(180) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d933299c-beea-4829-a906-a6de2623b895" testId="f4b45c2f-fc98-d23c-6179-62d5b5a59825" testName="AddingSeveralNumbers_60" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0005919" startTime="2016-02-29T13:31:18.5770861-05:00" endTime="2016-02-29T13:31:18.5800748-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d933299c-beea-4829-a906-a6de2623b895">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0.0s)
Given I have entered 60 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(60) (0.0s)
And I have entered 70 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(70) (0.0s)
And I have entered 130 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(130) (0.0s)
When I press add
-&gt; done: AdditionSteps.WhenIPressAdd() (0.0s)
Then the result should be 260 on the screen
-&gt; done: AdditionSteps.ThenTheResultShouldBeOnTheScreen(260) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2c348320-9cb3-4902-a6f0-e8ce76519fa9" testId="6b8581c3-611e-6116-4232-a31382677735" testName="AddTwoNumbers" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0005692" startTime="2016-02-29T13:31:18.5810749-05:00" endTime="2016-02-29T13:31:18.5850936-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2c348320-9cb3-4902-a6f0-e8ce76519fa9">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0.0s)
Given I have entered 1 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(1) (0.0s)
And I have entered 2 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(2) (0.0s)
When I press add
-&gt; done: AdditionSteps.WhenIPressAdd() (0.0s)
Then the result should be 3 on the screen
-&gt; done: AdditionSteps.ThenTheResultShouldBeOnTheScreen(3) (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="49085209-3670-430a-b4e1-697177b97fae" testId="b13a186e-33df-348e-f9e2-a18b445d0d6e" testName="FailToAddTwoNumbers" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0347966" startTime="2016-02-29T13:31:18.5860937-05:00" endTime="2016-02-29T13:31:18.6240959-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="49085209-3670-430a-b4e1-697177b97fae">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0.0s)
Given I have entered 1 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(1) (0.0s)
And I have entered 2.2 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(2.2) (0.0s)
When I press add
-&gt; done: AdditionSteps.WhenIPressAdd() (0.0s)
Then the result should be 3.2 on the screen
-&gt; error: Input string was not in a correct format.</StdOut>
        <ErrorInfo>
          <Message>Test method Pickles.TestHarness.MsTest.AdditionFeature.FailToAddTwoNumbers threw exception: 
System.FormatException: Input string was not in a correct format.</Message>
          <StackTrace>    at System.Number.StringToNumber(String str, NumberStyles options, NumberBuffer&amp; number, NumberFormatInfo info, Boolean parseDecimal)
   at System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info)
   at System.String.System.IConvertible.ToInt32(IFormatProvider provider)
   at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)
   at TechTalk.SpecFlow.Bindings.StepArgumentTypeConverter.ConvertSimple(Type typeToConvertTo, Object value, CultureInfo cultureInfo)
   at TechTalk.SpecFlow.Bindings.StepArgumentTypeConverter.ConvertSimple(IBindingType typeToConvertTo, Object value, CultureInfo cultureInfo)
   at TechTalk.SpecFlow.Bindings.StepArgumentTypeConverter.Convert(Object value, IBindingType typeToConvertTo, CultureInfo cultureInfo)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ConvertArg(Object value, IBindingType typeToConvertTo)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.&lt;&gt;c__DisplayClass5.&lt;GetExecuteArguments&gt;b__4(Object arg, Int32 argIndex)
   at System.Linq.Enumerable.&lt;SelectIterator&gt;d__5`2.MoveNext()
   at System.Linq.Buffer`1..ctor(IEnumerable`1 source)
   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.GetExecuteArguments(BindingMatch match)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.AdditionFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\Addition.feature.cs:line 0
   at Pickles.TestHarness.MsTest.AdditionFeature.FailToAddTwoNumbers() in C:\src\pickles-testresults\TestHarness\MsTest\Addition.feature:line 34
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b4b846b0-aafb-4e0b-b82c-b81e74885ed4" testId="2124dd33-7aaa-d4fb-c72f-98ad434251c0" testName="NotAutomatedAddingTwoNumbers" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0307554" startTime="2016-02-29T13:31:18.6250860-05:00" endTime="2016-02-29T13:31:18.6570943-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b4b846b0-aafb-4e0b-b82c-b81e74885ed4">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0.0s)
Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

When unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Then unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.AdditionFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\Addition.feature.cs:line 0
   at Pickles.TestHarness.MsTest.AdditionFeature.NotAutomatedAddingTwoNumbers() in C:\src\pickles-testresults\TestHarness\MsTest\Addition.feature:line 46
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="08a864ff-1bab-4fda-b9c3-9442a9c5dbc2" testId="b4815779-aba4-cf1b-8df3-4a745af70720" testName="AddingSeveralNumbers_40" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0098841" startTime="2016-02-29T13:31:18.6580947-05:00" endTime="2016-02-29T13:31:18.6710980-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="08a864ff-1bab-4fda-b9c3-9442a9c5dbc2">
      <Output>
        <StdOut>Given the background step fails
-&gt; error: 
    1
        should be
    2
        but was
    1
And the calculator has clean memory
-&gt; skipped because of previous errors
Given I have entered 40 into the calculator
-&gt; skipped because of previous errors
And I have entered 50 into the calculator
-&gt; skipped because of previous errors
And I have entered 90 into the calculator
-&gt; skipped because of previous errors
When I press add
-&gt; skipped because of previous errors
Then the result should be 180 on the screen
-&gt; skipped because of previous errors</StdOut>
        <ErrorInfo>
          <Message>Test method Pickles.TestHarness.MsTest.FailingBackgroundFeature.AddingSeveralNumbers_40 threw exception: 
Shouldly.ChuckedAWobbly: 
    1
        should be
    2
        but was
    1</Message>
          <StackTrace>    at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldlyCoreExtensions.cs:line 18
   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldBeTestExtensions.cs:line 17
   at AutomationLayer.AdditionSteps.GivenTheBackgroundStepFails() in C:\src\pickles-testresults\TestHarness\AutomationLayer\AdditionSteps.cs:line 25
   at lambda_method(Closure , IContextManager )
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.FailingBackgroundFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\FailingBackground.feature.cs:line 0
   at Pickles.TestHarness.MsTest.FailingBackgroundFeature.AddingSeveralNumbers(String firstNumber, String secondNumber, String thirdNumber, String result, String[] exampleTags) in C:\src\pickles-testresults\TestHarness\MsTest\FailingBackground.feature:line 19
   at Pickles.TestHarness.MsTest.FailingBackgroundFeature.AddingSeveralNumbers_40() in C:\src\pickles-testresults\TestHarness\MsTest\FailingBackground.feature.cs:line 0
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="65cce851-fe31-4e22-b9db-b45daa8902f4" testId="17bb28b8-a770-72be-af08-5a4b0847e4ea" testName="AddingSeveralNumbers_60" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0019666" startTime="2016-02-29T13:31:18.6721163-05:00" endTime="2016-02-29T13:31:18.6751172-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="65cce851-fe31-4e22-b9db-b45daa8902f4">
      <Output>
        <StdOut>Given the background step fails
-&gt; error: 
    1
        should be
    2
        but was
    1
And the calculator has clean memory
-&gt; skipped because of previous errors
Given I have entered 60 into the calculator
-&gt; skipped because of previous errors
And I have entered 70 into the calculator
-&gt; skipped because of previous errors
And I have entered 130 into the calculator
-&gt; skipped because of previous errors
When I press add
-&gt; skipped because of previous errors
Then the result should be 260 on the screen
-&gt; skipped because of previous errors</StdOut>
        <ErrorInfo>
          <Message>Test method Pickles.TestHarness.MsTest.FailingBackgroundFeature.AddingSeveralNumbers_60 threw exception: 
Shouldly.ChuckedAWobbly: 
    1
        should be
    2
        but was
    1</Message>
          <StackTrace>    at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldlyCoreExtensions.cs:line 18
   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldBeTestExtensions.cs:line 17
   at AutomationLayer.AdditionSteps.GivenTheBackgroundStepFails() in C:\src\pickles-testresults\TestHarness\AutomationLayer\AdditionSteps.cs:line 25
   at lambda_method(Closure , IContextManager )
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.FailingBackgroundFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\FailingBackground.feature.cs:line 0
   at Pickles.TestHarness.MsTest.FailingBackgroundFeature.AddingSeveralNumbers(String firstNumber, String secondNumber, String thirdNumber, String result, String[] exampleTags) in C:\src\pickles-testresults\TestHarness\MsTest\FailingBackground.feature:line 19
   at Pickles.TestHarness.MsTest.FailingBackgroundFeature.AddingSeveralNumbers_60() in C:\src\pickles-testresults\TestHarness\MsTest\FailingBackground.feature.cs:line 0
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="41b67f13-9fce-438b-a8dc-dbd6388e8934" testId="ca63316a-39e5-9545-3bca-f1839c7b4664" testName="AddTwoNumbers" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0022040" startTime="2016-02-29T13:31:18.6760994-05:00" endTime="2016-02-29T13:31:18.6791009-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="41b67f13-9fce-438b-a8dc-dbd6388e8934">
      <Output>
        <StdOut>Given the background step fails
-&gt; error: 
    1
        should be
    2
        but was
    1
And the calculator has clean memory
-&gt; skipped because of previous errors
Given I have entered 50 into the calculator
-&gt; skipped because of previous errors
And I have entered 70 into the calculator
-&gt; skipped because of previous errors
When I press add
-&gt; skipped because of previous errors
Then the result should be 120 on the screen
-&gt; skipped because of previous errors</StdOut>
        <ErrorInfo>
          <Message>Test method Pickles.TestHarness.MsTest.FailingBackgroundFeature.AddTwoNumbers threw exception: 
Shouldly.ChuckedAWobbly: 
    1
        should be
    2
        but was
    1</Message>
          <StackTrace>    at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldlyCoreExtensions.cs:line 18
   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldBeTestExtensions.cs:line 17
   at AutomationLayer.AdditionSteps.GivenTheBackgroundStepFails() in C:\src\pickles-testresults\TestHarness\AutomationLayer\AdditionSteps.cs:line 25
   at lambda_method(Closure , IContextManager )
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.FailingBackgroundFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\FailingBackground.feature.cs:line 0
   at Pickles.TestHarness.MsTest.FailingBackgroundFeature.AddTwoNumbers() in C:\src\pickles-testresults\TestHarness\MsTest\FailingBackground.feature:line 12
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3a186856-41de-4034-b4a8-feade31a112f" testId="18582dd5-09c7-ce67-9cb7-8e15a9cdffd0" testName="FailingFeatureFailingScenario" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0042406" startTime="2016-02-29T13:31:18.6801002-05:00" endTime="2016-02-29T13:31:18.6871027-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3a186856-41de-4034-b4a8-feade31a112f">
      <Output>
        <StdOut>Then failing step
-&gt; error: 
    true
        should be
    False
        but was
    True</StdOut>
        <ErrorInfo>
          <Message>Test method Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature.FailingFeatureFailingScenario threw exception: 
Shouldly.ChuckedAWobbly: 
    true
        should be
    False
        but was
    True</Message>
          <StackTrace>    at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldlyCoreExtensions.cs:line 18
   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldBeTestExtensions.cs:line 17
   at AutomationLayer.MinimalFeatures.MinimalSteps.ThenFailingStep() in C:\src\pickles-testresults\TestHarness\AutomationLayer\MinimalFeatures\MinimalSteps.cs:line 24
   at lambda_method(Closure , IContextManager )
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\Minimal Features\Failing.feature.cs:line 0
   at Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature.FailingFeatureFailingScenario() in C:\src\pickles-testresults\TestHarness\MsTest\Minimal Features\Failing.feature:line 10
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0a75715a-b55a-472c-9ab4-719e75bfc680" testId="7e6c75c9-5365-7582-f701-20d37d3ff511" testName="FailingFeatureInconclusiveScenario" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0021846" startTime="2016-02-29T13:31:18.6881091-05:00" endTime="2016-02-29T13:31:18.6921056-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0a75715a-b55a-472c-9ab4-719e75bfc680">
      <Output>
        <StdOut>Then inconclusive step
-&gt; pending: MinimalSteps.ThenInconclusiveStep()</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. One or more step definitions are not implemented yet.
  MinimalSteps.ThenInconclusiveStep()</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\Minimal Features\Failing.feature.cs:line 0
   at Pickles.TestHarness.MsTest.MinimalFeatures.FailingFeature.FailingFeatureInconclusiveScenario() in C:\src\pickles-testresults\TestHarness\MsTest\Minimal Features\Failing.feature:line 7
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="639cb5c4-04f2-44f2-9c1d-c04cbef0cad8" testId="fa1e54c9-cdb0-8bb1-6764-9179c3b61825" testName="FailingFeaturePassingScenario" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0004721" startTime="2016-02-29T13:31:18.6931222-05:00" endTime="2016-02-29T13:31:18.6951164-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="639cb5c4-04f2-44f2-9c1d-c04cbef0cad8">
      <Output>
        <StdOut>Then passing step
-&gt; done: MinimalSteps.ThenPassingStep() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c14a24e4-f357-4e54-bff6-72b4c302dc21" testId="add44896-9236-510f-750d-eb49b89a7a65" testName="InconclusiveFeatureInconclusiveScenario" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0017543" startTime="2016-02-29T13:31:18.6951164-05:00" endTime="2016-02-29T13:31:18.6991061-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c14a24e4-f357-4e54-bff6-72b4c302dc21">
      <Output>
        <StdOut>Then inconclusive step
-&gt; pending: MinimalSteps.ThenInconclusiveStep()</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. One or more step definitions are not implemented yet.
  MinimalSteps.ThenInconclusiveStep()</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.MinimalFeatures.InconclusiveFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\Minimal Features\Inconclusive.feature.cs:line 0
   at Pickles.TestHarness.MsTest.MinimalFeatures.InconclusiveFeature.InconclusiveFeatureInconclusiveScenario() in C:\src\pickles-testresults\TestHarness\MsTest\Minimal Features\Inconclusive.feature:line 7
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="beda5beb-f73a-4471-94ee-56da009212bb" testId="41cb0c4f-1c07-4937-29e8-dcc987caf94e" testName="InconclusiveFeaturePassingScenario" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0003426" startTime="2016-02-29T13:31:18.7001062-05:00" endTime="2016-02-29T13:31:18.7021079-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="beda5beb-f73a-4471-94ee-56da009212bb">
      <Output>
        <StdOut>Then passing step
-&gt; done: MinimalSteps.ThenPassingStep() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ee52d898-3893-4b11-aca2-690c962c9094" testId="3af599bd-a8de-95a2-1ecc-194c7f8aceeb" testName="PassingFeaturePassingScenario" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0004291" startTime="2016-02-29T13:31:18.7031114-05:00" endTime="2016-02-29T13:31:18.7051196-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ee52d898-3893-4b11-aca2-690c962c9094">
      <Output>
        <StdOut>Then passing step
-&gt; done: MinimalSteps.ThenPassingStep() (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="84b87db1-b1a6-4bd5-8628-48cdde807b27" testId="0e090158-43a1-1be8-47c2-13e1b2c9f8c7" testName="NotAutomatedScenario1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0044848" startTime="2016-02-29T13:31:18.7061251-05:00" endTime="2016-02-29T13:31:18.7131094-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="84b87db1-b1a6-4bd5-8628-48cdde807b27">
      <Output>
        <StdOut>Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

When unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Then unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature.cs:line 0
   at Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.NotAutomatedScenario1() in C:\src\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature:line 9
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="40db28a5-6f62-4207-9029-39db08667250" testId="067e1c92-2860-531b-28dc-c2863e91b7f5" testName="NotAutomatedScenario2" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0036003" startTime="2016-02-29T13:31:18.7131094-05:00" endTime="2016-02-29T13:31:18.7181231-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="40db28a5-6f62-4207-9029-39db08667250">
      <Output>
        <StdOut>Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

When unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Then unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature.cs:line 0
   at Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.NotAutomatedScenario2() in C:\src\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature:line 14
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="570e9634-242d-41bf-88bf-ea10800527e1" testId="64813bea-d79b-d74b-adb5-1302eaf5641f" testName="NotAutomatedScenario3" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0038319" startTime="2016-02-29T13:31:18.7191104-05:00" endTime="2016-02-29T13:31:18.7251120-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="570e9634-242d-41bf-88bf-ea10800527e1">
      <Output>
        <StdOut>Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

When unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Then unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature.cs:line 0
   at Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.NotAutomatedScenario3() in C:\src\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature:line 19
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6385cf85-f1b1-4e89-b2d7-ed3de7d43023" testId="aa71fe8a-e5aa-f23d-c632-cfb3c587ca21" testName="TestMethod" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0001519" startTime="2016-02-29T13:31:18.7261124-05:00" endTime="2016-02-29T13:31:18.7271253-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6385cf85-f1b1-4e89-b2d7-ed3de7d43023">
    </UnitTestResult>
    <UnitTestResult executionId="12b14fd2-ed0a-46c2-a19a-f9a4257d58af" testId="78aeddd0-4ae5-6103-b7dd-e62b71148721" testName="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet0_Pass_1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0013681" startTime="2016-02-29T13:31:18.7281140-05:00" endTime="2016-02-29T13:31:18.7321136-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="12b14fd2-ed0a-46c2-a19a-f9a4257d58af">
      <Output>
        <StdOut>Then the scenario will 'pass_1'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_1") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d138cd0f-06d4-4e6c-8c27-cf675ae7fd8a" testId="ee74d71f-f824-19d9-866e-a408a95ffa99" testName="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet0_Pass_2" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0002254" startTime="2016-02-29T13:31:18.7331143-05:00" endTime="2016-02-29T13:31:18.7351274-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d138cd0f-06d4-4e6c-8c27-cf675ae7fd8a">
      <Output>
        <StdOut>Then the scenario will 'pass_2'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_2") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="478620d9-8754-4ed6-a149-e6a5a812a4b5" testId="e30ef794-1ea7-a76a-356b-1668bca94630" testName="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0016441" startTime="2016-02-29T13:31:18.7361161-05:00" endTime="2016-02-29T13:31:18.7391167-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="478620d9-8754-4ed6-a149-e6a5a812a4b5">
      <Output>
        <StdOut>Then the scenario will 'inconclusive_1'
-&gt; pending: ScenarioOutlineSteps.ThenTheScenarioWill("inconclusive_1")</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. One or more step definitions are not implemented yet.
  ScenarioOutlineSteps.ThenTheScenarioWill("inconclusive_1")</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections_(String result, String[] exampleTags) in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature:line 45
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_1() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e7670bb6-9523-4594-9760-d1d941205633" testId="4d5f7893-139c-db00-8823-de561780758d" testName="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_2" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0018957" startTime="2016-02-29T13:31:18.7401169-05:00" endTime="2016-02-29T13:31:18.7441188-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e7670bb6-9523-4594-9760-d1d941205633">
      <Output>
        <StdOut>Then the scenario will 'inconclusive_2'
-&gt; pending: ScenarioOutlineSteps.ThenTheScenarioWill("inconclusive_2")</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. One or more step definitions are not implemented yet.
  ScenarioOutlineSteps.ThenTheScenarioWill("inconclusive_2")</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections_(String result, String[] exampleTags) in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature:line 45
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Inconclusive_2() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="027e534e-d111-4fb7-88d5-2fa8e793fe3d" testId="78a6b3a3-679e-ee71-7ff5-c9338e3be6c2" testName="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0018872" startTime="2016-02-29T13:31:18.7451180-05:00" endTime="2016-02-29T13:31:18.7481181-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="027e534e-d111-4fb7-88d5-2fa8e793fe3d">
      <Output>
        <StdOut>Then the scenario will 'fail_1'
-&gt; error: 
    true
        should be
    False
        but was
    True</StdOut>
        <ErrorInfo>
          <Message>Test method Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_1 threw exception: 
Shouldly.ChuckedAWobbly: 
    true
        should be
    False
        but was
    True</Message>
          <StackTrace>    at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldlyCoreExtensions.cs:line 18
   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldBeTestExtensions.cs:line 17
   at AutomationLayer.ScenarioOutlineSteps.ThenTheScenarioWill(String result) in C:\src\pickles-testresults\TestHarness\AutomationLayer\ScenarioOutlineSteps.cs:line 21
   at lambda_method(Closure , IContextManager , String )
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections_(String result, String[] exampleTags) in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature:line 45
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_1() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3d59785c-3405-4625-9544-f7ba5f664fe1" testId="40304968-0dee-8e41-4f42-20809899a9d0" testName="AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_2" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0021872" startTime="2016-02-29T13:31:18.7491364-05:00" endTime="2016-02-29T13:31:18.7521188-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3d59785c-3405-4625-9544-f7ba5f664fe1">
      <Output>
        <StdOut>Then the scenario will 'fail_2'
-&gt; error: 
    true
        should be
    False
        but was
    True</StdOut>
        <ErrorInfo>
          <Message>Test method Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_2 threw exception: 
Shouldly.ChuckedAWobbly: 
    true
        should be
    False
        but was
    True</Message>
          <StackTrace>    at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldlyCoreExtensions.cs:line 18
   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldBeTestExtensions.cs:line 17
   at AutomationLayer.ScenarioOutlineSteps.ThenTheScenarioWill(String result) in C:\src\pickles-testresults\TestHarness\AutomationLayer\ScenarioOutlineSteps.cs:line 21
   at lambda_method(Closure , IContextManager , String )
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections_(String result, String[] exampleTags) in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature:line 45
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Fail_2() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2f709cc6-9269-4107-934f-343e4a914966" testId="72d470fa-c19a-1302-1fcf-eb104ea36048" testName="DealCorrectlyWithBackslashesInTheExamples_CTemp" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0005381" startTime="2016-02-29T13:31:18.7531198-05:00" endTime="2016-02-29T13:31:18.7551215-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2f709cc6-9269-4107-934f-343e4a914966">
      <Output>
        <StdOut>When I have backslashes in the value, for example a 'c:\Temp\'
-&gt; done: ScenarioOutlineSteps.WhenIHaveBackslashesInTheValueForExampleAFilePath("c:\Temp\") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0cdaf90e-7083-4a5c-b98e-f68272057f57" testId="d09c033d-0065-cbeb-bd7c-ee8b6460688f" testName="DealCorrectlyWithParenthesisInTheExamples_ThisIsADescriptionAndMore" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0005501" startTime="2016-02-29T13:31:18.7561207-05:00" endTime="2016-02-29T13:31:18.7581332-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0cdaf90e-7083-4a5c-b98e-f68272057f57">
      <Output>
        <StdOut>When I have parenthesis in the value, for example an 'This is a description (and more)'
-&gt; done: ScenarioOutlineSteps.WhenIHaveParenthesisInTheValueForExampleAnOverlyDescriptiveField("This is a descrip...") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5bc6395d-9425-4db6-be59-68cb956cddb3" testId="2c8f1abb-446c-6683-6327-8ec4ccd46e1a" testName="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0003187" startTime="2016-02-29T13:31:18.7591208-05:00" endTime="2016-02-29T13:31:18.7611213-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5bc6395d-9425-4db6-be59-68cb956cddb3">
      <Output>
        <StdOut>Then the scenario will 'pass_1'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_1") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="17553853-0683-4145-9d61-74031017021a" testId="9efc5df4-5f77-a670-8622-976418721b8f" testName="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_2" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0002496" startTime="2016-02-29T13:31:18.7621226-05:00" endTime="2016-02-29T13:31:18.7631227-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="17553853-0683-4145-9d61-74031017021a">
      <Output>
        <StdOut>Then the scenario will 'pass_2'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_2") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ee5409c4-d89a-4640-b17f-b8a1676aae7f" testId="9bb2410c-d8c6-90b8-75cd-5c93dc903745" testName="ThisIsAScenarioOutlineWhereAllScenariosPass_Pass_3" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0001992" startTime="2016-02-29T13:31:18.7641219-05:00" endTime="2016-02-29T13:31:18.7661233-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ee5409c4-d89a-4640-b17f-b8a1676aae7f">
      <Output>
        <StdOut>Then the scenario will 'pass_3'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_3") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5c0a8fb0-126d-490e-b036-2d0a26f9c66d" testId="05c22c90-eaaa-d3c2-bd2d-36c2df85528e" testName="ThisIsAScenarioOutlineWhereOneScenarioFails_Fail_1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0020560" startTime="2016-02-29T13:31:18.7661233-05:00" endTime="2016-02-29T13:31:18.7701241-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5c0a8fb0-126d-490e-b036-2d0a26f9c66d">
      <Output>
        <StdOut>Then the scenario will 'fail_1'
-&gt; error: 
    true
        should be
    False
        but was
    True</StdOut>
        <ErrorInfo>
          <Message>Test method Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ThisIsAScenarioOutlineWhereOneScenarioFails_Fail_1 threw exception: 
Shouldly.ChuckedAWobbly: 
    true
        should be
    False
        but was
    True</Message>
          <StackTrace>    at Shouldly.ShouldlyCoreExtensions.AssertAwesomely[T](T actual, Func`2 specifiedConstraint, Object originalActual, Object originalExpected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldlyCoreExtensions.cs:line 18
   at Shouldly.ShouldBeTestExtensions.ShouldBe[T](T actual, T expected) in c:\TeamCity\buildAgent\work\10efaabfa8adbd4e\src\Shouldly\ShouldBeTestExtensions.cs:line 17
   at AutomationLayer.ScenarioOutlineSteps.ThenTheScenarioWill(String result) in C:\src\pickles-testresults\TestHarness\AutomationLayer\ScenarioOutlineSteps.cs:line 21
   at lambda_method(Closure , IContextManager , String )
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ThisIsAScenarioOutlineWhereOneScenarioFails(String result, String[] exampleTags) in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature:line 34
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ThisIsAScenarioOutlineWhereOneScenarioFails_Fail_1() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4b0b1635-cf18-425b-bb46-0b3d893671fa" testId="e64af447-d4dc-7221-865a-703128db7b90" testName="ThisIsAScenarioOutlineWhereOneScenarioFails_Pass_1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0003227" startTime="2016-02-29T13:31:18.7711253-05:00" endTime="2016-02-29T13:31:18.7721252-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4b0b1635-cf18-425b-bb46-0b3d893671fa">
      <Output>
        <StdOut>Then the scenario will 'pass_1'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_1") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3727f45e-675e-4c11-93b8-17c0d3a607d8" testId="b04f3200-80ca-d47f-0c01-8a37e5c952e6" testName="ThisIsAScenarioOutlineWhereOneScenarioFails_Pass_2" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0002211" startTime="2016-02-29T13:31:18.7731253-05:00" endTime="2016-02-29T13:31:18.7751266-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3727f45e-675e-4c11-93b8-17c0d3a607d8">
      <Output>
        <StdOut>Then the scenario will 'pass_2'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_2") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="05f537a2-462a-4a54-8a89-c50ee92ee819" testId="8c97c958-0c5d-1594-2cc5-02c96df8fc9b" testName="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Inconclusive_1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0012329" startTime="2016-02-29T13:31:18.7761268-05:00" endTime="2016-02-29T13:31:18.7781381-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="05f537a2-462a-4a54-8a89-c50ee92ee819">
      <Output>
        <StdOut>Then the scenario will 'inconclusive_1'
-&gt; pending: ScenarioOutlineSteps.ThenTheScenarioWill("inconclusive_1")</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. One or more step definitions are not implemented yet.
  ScenarioOutlineSteps.ThenTheScenarioWill("inconclusive_1")</Message>
          <StackTrace>   at lambda_method(Closure , String , Object[] )
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   at TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   at TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ScenarioCleanup() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive(String result, String[] exampleTags) in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature:line 21
   at Pickles.TestHarness.MsTest.ScenarioOutlinesFeature.ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Inconclusive_1() in C:\src\pickles-testresults\TestHarness\MsTest\ScenarioOutlines.feature.cs:line 0
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1d5f63e8-3036-4422-92d6-d60ba1ae151b" testId="6e54c207-a3b1-f181-06be-066795ac26e1" testName="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Pass_1" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0001761" startTime="2016-02-29T13:31:18.7791260-05:00" endTime="2016-02-29T13:31:18.7801389-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1d5f63e8-3036-4422-92d6-d60ba1ae151b">
      <Output>
        <StdOut>Then the scenario will 'pass_1'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_1") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="31eb3903-2072-4aa5-beb1-aa68da5cef6c" testId="8f2bb160-fa82-a566-570e-51eeb5237e95" testName="ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Pass_2" computerName="DESKTOP-AIFNJPI" duration="00:00:00.0002074" startTime="2016-02-29T13:31:18.7811276-05:00" endTime="2016-02-29T13:31:18.7831282-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="31eb3903-2072-4aa5-beb1-aa68da5cef6c">
      <Output>
        <StdOut>Then the scenario will 'pass_2'
-&gt; done: ScenarioOutlineSteps.ThenTheScenarioWill("pass_2") (0.0s)</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>